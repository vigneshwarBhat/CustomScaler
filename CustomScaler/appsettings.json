{
  "Scaling": {
    "HpaTarget": [
      {
        "Name": "api-deployment",
        "K8Kind": "Deployment",
        "MaxReplica": 3,
        "MinReplica": 2,
        "PromoQuery": "container_memory_working_set_bytes{0}", //TODO: Need to have more generic way with different condition.
        "ScaleDownQuery": "", //TODO: Need to be implemented
        "TargetLimit": "250M",
        "ContainerName": "hpaapi"
      },
      {
        "Name": "webapp-statefulset",
        "K8Kind": "Statefulset",
        "MaxReplica": 3,
        "MinReplica": 2,
        "PromoQuery": "container_memory_working_set_bytes{0}", //TODO: Need to have more generic way with different condition.
        "ScaleDownQuery": "", //TODO: Need to be implemented
        "TargetLimit": "250M",
        "ContainerName": "webapp"
      }
    ],
    "VpaTarget": [
      {
        "Name": "api-deployment",
        "K8Kind": "Deployment",
        "MaxMemory": "800M",
        "ScaleDownQuery": "", //TODO: Need to be implemented
        "PromoQuery": "sum(rate(hpaexample_Largecart_Number{0}[5m])) by (machine)",
        "PromoQuery1": "sum(rate(hpaexample_Largecart_Number{0}[5m])) by (machine)  > 0 and container_memory_working_set_bytes{0} >= 150M ", //TODO: We need this kind of query.
        "ContainerName": "hpaapi"
      },
      {
        "Name": "webapp-statefulset",
        "K8Kind": "Statefulset",
        "MaxMemory": "800M",
        "ScaleDownQuery": "", //TODO: Need to be implemented
        "PromoQuery": "sum(rate(hpaexample_Largecart_Number{0}[5m])) by (machine)",
        "PromoQuery1": "sum(rate(hpaexample_Largecart_Number{0}[5m])) by (machine)  > 0 and container_memory_working_set_bytes{0} >= 150M ", //TODO: We need this kind of query.
        "ContainerName": "webapp"
      }
    ]
  },
  "DelayInMin": 2,
  "PrometheusServer": "http://127.0.0.1:52321/api/v1",
  "KubernetesAPIServer": "",
  "Serilog": {
    "Using": [
      "Serilog.Sinks.File",
      "Serilog.Sinks.Console"
    ],
    "MinimumLevel": {
      "Default": "Information",
      "Override": {
        "Microsoft": "Error",
        "System": "Error"
      }
    },
    "WriteTo": [
      {
        "Name": "File",
        "Args": {
          "path": "log.txt",
          "rollingInterval": "Day"
        }
      },
      {
        "Name": "Console"

      }
    ]
  }
}